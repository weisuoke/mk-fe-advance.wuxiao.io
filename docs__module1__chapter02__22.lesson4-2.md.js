(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([[21],{JjdP:function(n,e,a){"use strict";a.r(e),e["default"]={}},Zs1V:function(n){n.exports=JSON.parse("{}")},rchF:function(n,e,a){"use strict";a.r(e);var o=a("q1tI"),s=a.n(o),r=a("dEAq"),i=a("H1Ra");a("JjdP");e["default"]=n=>(s.a.useEffect((()=>{var e;null!==n&&void 0!==n&&null!==(e=n.location)&&void 0!==e&&e.hash&&r["AnchorLink"].scrollToAnchor(decodeURIComponent(n.location.hash.slice(1)))}),[]),s.a.createElement(s.a.Fragment,null,s.a.createElement("div",{className:"markdown"},s.a.createElement("h1",{id:"yargs\u5feb\u901f\u5165\u95e8"},s.a.createElement(r["AnchorLink"],{to:"#yargs\u5feb\u901f\u5165\u95e8","aria-hidden":"true",tabIndex:-1},s.a.createElement("span",{className:"icon icon-link"})),"yargs\u5feb\u901f\u5165\u95e8"),s.a.createElement(i["a"],{code:"#!/usr/bin/env node\n\nconst yargs = require('yargs/yargs')\nconst { hideBin } = require('yargs/helpers')\nconst dedent = require('dedent')\nconst pkg = require('./package.json ')\n\nconsole.log(hideBin(process.argv))\nconst arg = hideBin(process.argv)\nconst cli = yargs(arg)\n\nconst context = {\n  imoocVersion: pkg.version\n}\nconst argv = process.argv.slice(2)\n\ncli\n  .usage('Usage: imooc-test-weisuoke [command] <options>')\n  .demandCommand(1, \"A command is required. Pass --help to see all available commands and options.\")\n  .strict()\n  .recommendCommands()\n  .fail((err, msg) => {\n    console.log('err', err);\n    console.log('msg', msg)\n  })\n  .alias(\"h\", \"help\")\n  .alias(\"v\", \"version\")\n  .wrap(cli.terminalWidth())\n  .epilogue(dedent`\n    111\n    111\n  `)\n  .options({\n    debug: {\n      type: 'boolean',\n      describe: 'Bootstrap debug mode',\n      alias: 'd'\n    }\n  })\n  .option('registry', {\n    type: \"string\",\n    describe: 'Define global registry',\n    alias: 'r'\n  })\n  .group(['debug'], 'Dev options:')\n  .group(['registry'], 'Publish Options:')\n  .command('init [name]', 'Do init a project', (yargs) => {\n    yargs\n      .option('name', {\n        type: 'string',\n        describe: 'Name of a project',\n        alias: 'n'\n      })\n  }, (argv) => {\n    console.log(argv)\n  })\n  .command({\n    command: 'list',\n    aliases: ['ls', 'la', 'll'],\n    describe: 'List local packages',\n    builder: (yargs) => {},\n    handler: (argv) => {\n      console.log(argv)\n    }\n  })\n  .parse(argv, context);",lang:"js"}))))}}]);